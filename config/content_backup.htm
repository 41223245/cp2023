<h1>ROC</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><a href="https://github.com/mdecycu/cmsite">https://github.com/mdecycu/cmsite</a></span></span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

void draw_roc_flag(gdImagePtr img);
void draw_white_sun(gdImagePtr img, int center_x, int center_y, int sun_radius, int white, int red, int blue);

int main() {
    // width 3: height 2
    int width = 1200;
    int height = (int)(width*2.0 / 3.0);

    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);

    draw_roc_flag(img);

    FILE *outputFile = fopen("./roc_flag.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "Error opening the output file.\n");
        return 1;
    }
    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
    return 0;
}

void draw_roc_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);
    int red, white, blue;
    int center_x = (int)(width/4);
    int center_y = (int)(height/4);
    int sun_radius = (int)(width/8);

    // Colors for the flag
    red = gdImageColorAllocate(img, 242, 0, 0); // Red color
    white = gdImageColorAllocate(img, 255, 255, 255); // White stripes
    blue = gdImageColorAllocate(img, 0, 41, 204); // Blue

    // 繪製紅色矩形區域
    gdImageFilledRectangle(img, 0, 0, width, height, red);

    // 繪製藍色矩形區域
    gdImageFilledRectangle(img, 0, 0, (int)(width/2.0), (int)(height/2.0), blue);

    // 繪製太陽
    draw_white_sun(img, center_x, center_y, sun_radius, white, red, blue);
}
void draw_white_sun(gdImagePtr img, int center_x, int center_y, int sun_radius, int white, int red, int blue) {
    float angle = 0;
    int numRays = 12; // 光芒的數量

    gdPoint points[3]; // 三個頂點的陣列

    for (int i = 0; i &lt; numRays; i++) {
        angle = i * (2 * M_PI / numRays);
        float x1 = center_x + cos(angle) * sun_radius;
        float y1 = center_y + sin(angle) * sun_radius;

        // 調整兩個底邊頂點的位置
      float x2 = center_x + cos(angle + 0.35) * (sun_radius * 0.5);
      float y2 = center_y + sin(angle + 0.35) * (sun_radius * 0.5);
      float x3 = center_x + cos(angle - 0.35) * (sun_radius * 0.5);
      float y3 = center_y + sin(angle - 0.35) * (sun_radius * 0.5);

        // 設定多邊形的三個頂點
        points[0].x = (int)x1;
        points[0].y = (int)y1;
        points[1].x = (int)x2;
        points[1].y = (int)y2;
        points[2].x = (int)x3;
        points[2].y = (int)y3;

        gdImageFilledPolygon(img, points, 3, white);
    }
  //外圈
  gdImageFilledEllipse(img, center_x, center_y, sun_radius * 1.2, sun_radius * 1.2, blue);

    // 繪製太陽內部
    gdImageFilledEllipse(img, center_x, center_y, sun_radius * 1.1, sun_radius * 1.1, white);
}</pre>
<img caption="false" height="400" src="/images/usa_flag.png" width="758"/><h1>W5</h1>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">// 包含標準輸出入程式庫的標頭文件</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://blog.csdn.net/weixin_38468077/article/details/101069365</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// http://www.gnuplot.info/demo/</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://github.com/sysprog21/rv32emu</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://github.com/sysprog21/semu</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://docs.google.com/presentation/d/14N0cWG2SnBSqhc2cLF0_2VerB9FF8JN3</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://cs61c.org/fa23/</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://greenteapress.com/wp/think-python-2e/</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://github.com/ecalvadi/c99-examples</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://github.com/gouravthakur39/beginners-C-program-examples</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://github.com/ergenekonyigit/Numerical-Analysis-Examples</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://www.che.ncku.edu.tw/facultyweb/changct/html/teaching/CPPandMATLAB/Past/pdf%20Files/Chap02-Ling.pdf</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://gteceducation.com.sg/Brochures/PROGRAMMING/C%20PROGRAMMING%20FULL.pdf</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://jsomers.github.io/cbook/cbook.pdf</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://jsomers.github.io/cbook/index.html</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// http://student.itee.uq.edu.au/courses/csse2310/CProgrammingNotes.pdf</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// http://cslibrary.stanford.edu/101/EssentialC.pdf</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://publications.gbdirect.co.uk/c_book/</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// https://www.fossil-scm.org/fossil-book/doc/2ndEdition/fossilbook.pdf</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// ***** 在 replit 上執行</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// CD 下載</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// cc gnuplot_ex1.c -o gnuplot_ex1</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// ./gnuplot_ex1</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
#include &lt;stdio.h&gt;</span></span><span></span>
<span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
// 主函式</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
int main() {</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
    // 使用 popen 啟動 Gnuplot 進程</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
    FILE *gnuplotPipe = popen("gnuplot -persistent", "w");</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
    如果（！gnuplotPipe）{</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
        fprintf(stderr, "無法啟動 Gnuplot。\n");</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
        返回1；</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
    }</span></span><span></span>
<span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
    // 使用Gnuplot繪圖指令，指定字型並輸出為PNG</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
    fprintf(gnuplotPipe, "設定終端 png 字體 '預設,10' 大小 800,400\n");</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
    fprintf(gnuplotPipe, "設定輸出 './../images/gnuplot_ex1.png'\n");</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
    fprintf(gnuplotPipe, "繪製 sin(x)");</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
    // 關閉popen</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
    pclose(gnuplotPipe);</span></span><span></span>
<span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
    返回0；</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
}</span></span></pre>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清除</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">光碟下載</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">抄送 gnuplot_ex1.c</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">./a.輸出</span></span></p>
<p><img alt="" height="200" src="/images/gnuplot_ex1.png" width="400"/></p>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">檔案名稱：</span></span><input id="kw_filename" placeholder="輸入檔名" type="text"/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.py</span></span></label> <span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="保存"/></span></span></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跑步</span></span></button> <button id="kw_show_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">輸出</span></span></button> <button id="kw_clear_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">明確輸出區</span></span></button><button id="clear_bd1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清晰的繪圖區</span></span></button><button onclick="window.location.reload()"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">重新載入</span></span></button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">從1累加到100第2部分：</span></span></p>
<p><button id="add1to100part2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1 加到 100</span></span></button><button id="cango_three_gears"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cango_三_齒輪</span></span></button><button id="bsnake"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">BS蛇</span></span></button><button id="aitetris"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">人工智慧俄羅斯方塊</span></span></button><button id="threejsblock"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">旋轉塊</span></span></button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">檔案名稱：</span></span><input id="kw_filename2" placeholder="輸入檔名" type="text"/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.py</span></span></label> <span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="保存"/></span></span></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跑步</span></span></button> <button id="kw_show_console2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">輸出</span></span></button> <button id="kw_clear_console2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">明確輸出區</span></span></button><button id="clear_bd2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清晰的繪圖區</span></span></button><button onclick="window.location.reload()"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">重新載入</span></span></button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>